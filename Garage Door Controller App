/**
 *  Garage Controller
 *
 *  Copyright 2015 George Chast
 *
 *  Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 *  in compliance with the License. You may obtain a copy of the License at:
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed
 *  on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License
 *  for the specific language governing permissions and limitations under the License.
 *
 */
definition(
    name: "Garage Door Controller App",
    namespace: "gtc100gh",
    author: "George Chast",
    description: "Mediates between Garage Door Control virtual Device, relay and contact sensor.",
    category: "Convenience",
    iconUrl: "http://garagedoorrepairsandiegoca.co/wp-content/uploads/2013/08/1.png",
    iconX2Url: "http://garagedoorrepairsandiegoca.co/wp-content/uploads/2013/08/1.png",
    iconX3Url: "http://garagedoorrepairsandiegoca.co/wp-content/uploads/2013/08/1.png")
preferences {
    section("Virtual Garage Door Button: ") {
	    input "garageDoorController", "capability.doorControl", title: "Garage Door Opener Virtual Button?", multiple: false, required: true
    }
    section("Momentary Relay") {
    	input "openerRelay", "capability.momentary", multiple: false, required: true
    }
    section("Garage Door Contact") {
	    input "garageDoorContact", "capability.contactSensor", multiple: false, required: true
    }
    section("Garage Light") {
    	input "garageLight", "capability.switch", multiple: false, required: false
    }
}
def clickHandler(evt) {										// from garageConroller to doorRelay
    log.debug "--- clickHandler"
    log.debug "Event: $evt.value"
	openerRelay.push()
}
def doorIsOpenHandler(evt){									// from doorContact to garageController
    log.debug "--- door-Is-Open-Handler"
    log.debug "Event: $evt.value"
    garageDoorController.opened()
    garageLight.on()
}
def doorIsClosedHandler(evt){								// from doorContact to garageController
    log.debug "--- door-Is-Closed-Handler"
    log.debug "Event: $evt.value"
    garageDoorController.closed()
}
def initialize(){
    subscribe(garageDoorController, "doorControl", clickHandler)
    subscribe(garageDoorContact,"contact.open",doorIsOpenHandler)
    subscribe(garageDoorContact,"contact.close",doorIsClosedHandler)
    subscribe(app,contactHandler)
    log.info "-initialized"
}
def installed(){   
initialize()  
log.info "installed with $settings"
}
def updated(){
unsubscribe()
initialize()
log.info "updated with $settings"
}
